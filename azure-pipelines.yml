# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'


- task: JFrogGenericArtifacts@1
  inputs:
    command: 'Download'
    connection: 'clouddsein'
    specSource: 'taskConfiguration'
    fileSpec: |
      {
        "files": [
          {
            "pattern": "k-generic-local/crx/jfrog.txt.gpg",
            "target": "$(Build.ArtifactStagingDirectory)/"
          }
        ]
      }
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    failNoOp: true

- task: JFrogGenericArtifacts@1
  inputs:
    command: 'Upload'
    connection: 'clouddsein'
    specSource: 'taskConfiguration'
    fileSpec: |
      {
        "files": [
          {
            "pattern": "$(Build.ArtifactStagingDirectory)/*.gpg",
            "target": "test-1234"
          }
        ]
      }
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    failNoOp: true
- task: JFrogPublishBuildInfo@1
  inputs:
    artifactoryConnection: 'clouddsein'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'